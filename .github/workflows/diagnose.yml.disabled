name: Diagnose Frontend Issues

on:
  workflow_dispatch:

jobs:
  diagnose:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Diagnostics on Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /root/giperarena

            echo "===== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –§–†–û–ù–¢–ï–ù–î–ê GIPERARENA ====="
            echo ""

            echo "1Ô∏è‚É£ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ frontend:"
            docker ps --filter name=giperarena-frontend --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            echo ""

            echo "2Ô∏è‚É£ Healthcheck –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
            docker inspect giperarena-frontend --format='{{json .State.Health}}' | python3 -m json.tool || echo "No health info"
            echo ""

            echo "3Ô∏è‚É£ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 30 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ frontend:"
            docker logs giperarena-frontend --tail 30
            echo ""

            echo "4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ frontend –∏–∑–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (healthcheck endpoint):"
            docker exec giperarena-frontend wget --no-verbose --tries=1 --spider http://localhost:3000/ 2>&1 || echo "‚ùå Healthcheck FAILED"
            echo ""

            echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ IP –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:"
            FRONTEND_IP=$(docker inspect giperarena-frontend --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}')
            echo "Frontend IP: $FRONTEND_IP"
            curl -I http://$FRONTEND_IP:3000/ 2>&1 | head -10
            echo ""

            echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–∏ proxy:"
            docker network inspect proxy --format='{{range $id, $container := .Containers}}{{$container.Name}}: {{$container.IPv4Address}}{{"\n"}}{{end}}' | grep giperarena
            echo ""

            echo "7Ô∏è‚É£ Traefik labels –Ω–∞ frontend:"
            docker inspect giperarena-frontend --format='{{range $key, $value := .Config.Labels}}{{if (hasPrefix $key "traefik")}}{{$key}}: {{$value}}{{"\n"}}{{end}}{{end}}'
            echo ""

            echo "8Ô∏è‚É£ –õ–æ–≥–∏ Traefik (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫, —Ñ–∏–ª—å—Ç—Ä giperarena):"
            docker logs traefik --tail 50 2>&1 | grep -i "giperarena\|frontend" || echo "No giperarena mentions in recent Traefik logs"
            echo ""

            echo "9Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ Traefik —Ä–æ—É—Ç–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ API:"
            curl -s http://localhost:8080/api/http/routers 2>/dev/null | python3 -c "import sys, json; routers = json.load(sys.stdin); [print(f'{r[\"name\"]}: {r[\"rule\"]} -> {r[\"status\"]}') for r in routers if 'giperarena' in r['name']]" || echo "Traefik API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            echo ""

            echo "üîü –¢–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ Traefik —Ä–æ—É—Ç–µ—Ä—ã:"
            curl -s http://localhost:8080/api/http/routers 2>/dev/null | python3 -c "import sys, json; print(json.dumps([{k: v for k, v in r.items() if k in ['name', 'rule', 'status', 'service']} for r in json.load(sys.stdin) if 'giperarena' in r.get('name', '')], indent=2))" || echo "Failed"
            echo ""

            echo "===== –ö–û–ù–ï–¶ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ====="
