#!/bin/bash
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DOCKER_USERNAME="${DOCKER_USERNAME:-giperpetr}"
DOCKER_PASSWORD="${DOCKER_PASSWORD}"
REGISTRY="docker.io/${DOCKER_USERNAME}"
SSH_KEY="${SSH_KEY:-~/.ssh/id_rsa}"
SERVER="${SERVER:-root@83.222.20.168}"
PROJECT_NAME="giperarena"

echo -e "${BLUE}üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π GiperARENA –Ω–∞ Docker Hub${NC}"
echo "======================================="

# 1. Git commit and push
echo -e "\n${YELLOW}üìù –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–¥ –≤ GitHub...${NC}"
COMMIT_MSG="deploy: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π $(date '+%Y-%m-%d %H:%M:%S')"
git add .
git commit -m "$COMMIT_MSG" || echo "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
echo -e "${GREEN}‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ–º–º–∏—Ç: $COMMIT_MSG${NC}"

git push origin master
echo -e "${GREEN}‚úÖ –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub${NC}"

# 2. Login to Docker Hub
echo -e "\n${YELLOW}üîê –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ Docker Hub...${NC}"

if [ -z "$DOCKER_PASSWORD" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  DOCKER_PASSWORD –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    echo -e "${YELLOW}–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –æ—Ç Docker Hub:${NC}"
    docker login
else
    echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin 2>/dev/null || {
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –≤ Docker Hub${NC}"
        exit 1
    }
fi
echo -e "${GREEN}‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –≤ Docker Hub${NC}"

# 3. Build and push multi-platform images
echo -e "\n${YELLOW}üê≥ –°–æ–±–∏—Ä–∞–µ–º multi-platform Docker –æ–±—Ä–∞–∑—ã...${NC}"

GIT_SHA=$(git rev-parse --short HEAD)

echo -e "${BLUE}–°–æ–±–∏—Ä–∞–µ–º frontend –¥–ª—è linux/amd64 –∏ linux/arm64...${NC}"
docker buildx build \
  --platform linux/amd64,linux/arm64 \
  -t ${REGISTRY}/${PROJECT_NAME}-frontend:latest \
  -t ${REGISTRY}/${PROJECT_NAME}-frontend:${GIT_SHA} \
  -f frontend/Dockerfile \
  --push \
  . || {
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend${NC}"
    exit 1
}

echo -e "${BLUE}–°–æ–±–∏—Ä–∞–µ–º backend –¥–ª—è linux/amd64 –∏ linux/arm64...${NC}"
docker buildx build \
  --platform linux/amd64,linux/arm64 \
  -t ${REGISTRY}/${PROJECT_NAME}-backend:latest \
  -t ${REGISTRY}/${PROJECT_NAME}-backend:${GIT_SHA} \
  -f backend/Dockerfile \
  --push \
  . || {
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ backend${NC}"
    exit 1
}

echo -e "${GREEN}‚úÖ Multi-platform –æ–±—Ä–∞–∑—ã —Å–æ–±—Ä–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Docker Hub (SHA: ${GIT_SHA})${NC}"

# 4. Deploy to server
echo -e "\n${YELLOW}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...${NC}"

ssh -i $SSH_KEY -o StrictHostKeyChecking=no $SERVER << 'ENDSSH'
    cd /root/giperarena

    echo "üîΩ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ multi-arch –æ–±—Ä–∞–∑—ã..."
    docker pull giperpetr/giperarena-frontend:latest
    docker pull giperpetr/giperarena-backend:latest

    echo "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    docker stop giperarena-frontend giperarena-backend || true
    docker rm giperarena-frontend giperarena-backend || true

    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    
    # Frontend
    docker run -d \
      --name giperarena-frontend \
      --restart unless-stopped \
      --network proxy \
      --network supabase_default \
      -e NEXT_PUBLIC_API_URL=https://api.giperarena.space \
      -e NEXT_PUBLIC_WS_URL=wss://ws.giperarena.space \
      -e NEXT_PUBLIC_MEDIA_URL=https://media.giperarena.space \
      -e NEXT_PUBLIC_SUPABASE_URL=https://api.giperarena.space \
      -e NEXT_PUBLIC_SUPABASE_ANON_KEY=${ANON_KEY} \
      --label "traefik.enable=true" \
      --label "traefik.http.routers.giperarena.rule=Host(\`giperarena.space\`)" \
      --label "traefik.http.routers.giperarena.entrypoints=websecure" \
      --label "traefik.http.routers.giperarena.tls.certresolver=letsencrypt" \
      --label "traefik.http.services.giperarena.loadbalancer.server.port=3000" \
      giperpetr/giperarena-frontend:latest

    # Backend
    docker run -d \
      --name giperarena-backend \
      --restart unless-stopped \
      --network proxy \
      --network supabase_default \
      --label "traefik.enable=true" \
      --label "traefik.http.routers.giperarena-api.rule=Host(\`api.giperarena.space\`)" \
      --label "traefik.http.routers.giperarena-api.entrypoints=websecure" \
      --label "traefik.http.routers.giperarena-api.tls.certresolver=letsencrypt" \
      --label "traefik.http.services.giperarena-api.loadbalancer.server.port=3000" \
      giperpetr/giperarena-backend:latest

    echo "‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    sleep 15

    echo "üßπ –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
    docker image prune -f

    echo ""
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps --filter "name=giperarena" --format "table {{.Names}}\t{{.Status}}\t{{.Image}}"

    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ frontend:"
    docker logs --tail 10 giperarena-frontend

    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ backend:"
    docker logs --tail 10 giperarena-backend
ENDSSH

echo -e "\n${GREEN}‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω —É—Å–ø–µ—à–Ω–æ!${NC}"
echo "======================================="
echo -e "üåê Frontend:     ${BLUE}https://giperarena.space${NC}"
echo -e "üîß Backend API:  ${BLUE}https://api.giperarena.space${NC}"
echo -e "üì¶ Git SHA:      ${BLUE}${GIT_SHA}${NC}"
echo -e "üê≥ Registry:     ${BLUE}Docker Hub (docker.io)${NC}"
