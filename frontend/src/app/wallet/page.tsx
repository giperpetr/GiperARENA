'use client';

export const dynamic = 'force-dynamic';

import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';

// Mock data
const MOCK_WALLET = {
  gac_balance: 1250.5,
  pac_balance: 8540.25,
  staked_amount: 5000,
  staking_tier: 'silver',
  stake_unlock_date: '2025-03-15',
};

const MOCK_TRANSACTIONS = [
  {
    id: '1',
    type: 'deposit',
    amount: 1000,
    token: 'PAC',
    status: 'completed',
    timestamp: '2025-01-20T10:30:00Z',
    hash: '0xabcd...1234',
  },
  {
    id: '2',
    type: 'game_fee',
    amount: -50,
    token: 'PAC',
    status: 'completed',
    timestamp: '2025-01-20T11:00:00Z',
    reference: 'Tokyo Cyber Arena',
  },
  {
    id: '3',
    type: 'stake',
    amount: -5000,
    token: 'PAC',
    status: 'completed',
    timestamp: '2025-01-19T15:00:00Z',
  },
  {
    id: '4',
    type: 'tournament_reward',
    amount: 500,
    token: 'PAC',
    status: 'completed',
    timestamp: '2025-01-18T20:00:00Z',
    reference: 'Tokyo Spring Championship',
  },
  {
    id: '5',
    type: 'withdrawal',
    amount: -200,
    token: 'GAC',
    status: 'pending',
    timestamp: '2025-01-20T12:00:00Z',
    hash: '0xef12...5678',
  },
];

const TRANSACTION_TYPES: Record<string, { label: string; icon: string }> = {
  deposit: { label: '–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ', icon: '‚¨áÔ∏è' },
  withdrawal: { label: '–í—ã–≤–æ–¥', icon: '‚¨ÜÔ∏è' },
  game_fee: { label: '–ò–≥—Ä–æ–≤–∞—è —Å–µ—Å—Å–∏—è', icon: 'üéÆ' },
  stake: { label: '–°—Ç–µ–π–∫–∏–Ω–≥', icon: 'üîí' },
  unstake: { label: '–ê–Ω—Å—Ç–µ–π–∫–∏–Ω–≥', icon: 'üîì' },
  tournament_reward: { label: '–ù–∞–≥—Ä–∞–¥–∞ —Ç—É—Ä–Ω–∏—Ä–∞', icon: 'üèÜ' },
  bet: { label: '–°—Ç–∞–≤–∫–∞', icon: 'üé≤' },
  nft_purchase: { label: '–ü–æ–∫—É–ø–∫–∞ NFT', icon: 'üñºÔ∏è' },
  nft_sale: { label: '–ü—Ä–æ–¥–∞–∂–∞ NFT', icon: 'üí∞' },
};

export default function WalletPage() {
  const [depositAmount, setDepositAmount] = useState('');
  const [withdrawAmount, setWithdrawAmount] = useState('');
  const [stakeAmount, setStakeAmount] = useState('');
  const [selectedDuration, setSelectedDuration] = useState(30);

  const daysUntilUnlock = Math.ceil(
    (new Date(MOCK_WALLET.stake_unlock_date).getTime() - Date.now()) / (1000 * 60 * 60 * 24)
  );

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <section className="border-b border-border/40 bg-gradient-to-b from-background to-space-dark-gray py-8">
        <div className="container mx-auto px-4">
          <h1 className="mb-4 text-4xl font-bold">
            <span className="text-gradient-cyan-purple">–ö–æ—à–µ–ª—ë–∫</span>
          </h1>
          <p className="text-muted-foreground">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞–º–∏ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º–∏</p>
        </div>
      </section>

      <div className="container mx-auto px-4 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-6">
            {/* Balances */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {/* GAC Balance */}
              <Card glow className="hover-lift">
                <CardHeader>
                  <div className="flex items-center justify-between">
                    <CardTitle>GAC Token</CardTitle>
                    <Badge variant="neon">Governance</Badge>
                  </div>
                  <CardDescription>–¢–æ–∫–µ–Ω —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-4xl font-bold text-primary mb-6">
                    {MOCK_WALLET.gac_balance.toLocaleString()}
                  </p>
                  <div className="flex gap-2">
                    <Button variant="neon" className="flex-1">
                      –ö—É–ø–∏—Ç—å
                    </Button>
                    <Button variant="outline" className="flex-1">
                      –ü—Ä–æ–¥–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>

              {/* PAC Balance */}
              <Card glow className="hover-lift">
                <CardHeader>
                  <div className="flex items-center justify-between">
                    <CardTitle>PAC Token</CardTitle>
                    <Badge variant="secondary">Utility</Badge>
                  </div>
                  <CardDescription>–ò–≥—Ä–æ–≤–∞—è –≤–∞–ª—é—Ç–∞</CardDescription>
                </CardHeader>
                <CardContent>
                  <p className="text-4xl font-bold text-secondary mb-6">
                    {MOCK_WALLET.pac_balance.toLocaleString()}
                  </p>
                  <div className="flex gap-2">
                    <Button variant="secondary" className="flex-1">
                      –ö—É–ø–∏—Ç—å
                    </Button>
                    <Button variant="outline" className="flex-1">
                      –ü—Ä–æ–¥–∞—Ç—å
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            {/* Operations Tabs */}
            <Card glow>
              <CardHeader>
                <CardTitle>–û–ø–µ—Ä–∞—Ü–∏–∏</CardTitle>
                <CardDescription>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ, –≤—ã–≤–æ–¥ –∏ —Å—Ç–µ–π–∫–∏–Ω–≥</CardDescription>
              </CardHeader>
              <CardContent>
                <Tabs defaultValue="deposit">
                  <TabsList className="w-full grid grid-cols-3">
                    <TabsTrigger value="deposit">–ü–æ–ø–æ–ª–Ω–∏—Ç—å</TabsTrigger>
                    <TabsTrigger value="withdraw">–í—ã–≤–µ—Å—Ç–∏</TabsTrigger>
                    <TabsTrigger value="stake">–°—Ç–µ–π–∫–∏–Ω–≥</TabsTrigger>
                  </TabsList>

                  {/* Deposit Tab */}
                  <TabsContent value="deposit" className="space-y-4">
                    <div className="space-y-2">
                      <label className="text-sm font-medium">–°—É–º–º–∞</label>
                      <Input
                        type="number"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É..."
                        value={depositAmount}
                        onChange={(e) => setDepositAmount(e.target.value)}
                      />
                    </div>
                    <div className="space-y-2">
                      <label className="text-sm font-medium">–¢–æ–∫–µ–Ω</label>
                      <div className="flex gap-2">
                        <Button variant="outline" className="flex-1">
                          PAC
                        </Button>
                        <Button variant="outline" className="flex-1">
                          GAC
                        </Button>
                      </div>
                    </div>
                    <div className="glass rounded-lg p-4 text-sm">
                      <p className="text-muted-foreground mb-2">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</p>
                      <ol className="list-decimal list-inside space-y-1 text-muted-foreground">
                        <li>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è</li>
                        <li>–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É</li>
                        <li>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –≤ –∫–æ—à–µ–ª—å–∫–µ</li>
                      </ol>
                    </div>
                    <Button variant="neon" className="w-full">
                      –ü–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ—à–µ–ª—ë–∫
                    </Button>
                  </TabsContent>

                  {/* Withdraw Tab */}
                  <TabsContent value="withdraw" className="space-y-4">
                    <div className="space-y-2">
                      <label className="text-sm font-medium">–°—É–º–º–∞</label>
                      <Input
                        type="number"
                        placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É..."
                        value={withdrawAmount}
                        onChange={(e) => setWithdrawAmount(e.target.value)}
                      />
                    </div>
                    <div className="space-y-2">
                      <label className="text-sm font-medium">–ê–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è</label>
                      <Input placeholder="0x..." />
                    </div>
                    <div className="glass rounded-lg p-4 text-sm">
                      <div className="flex justify-between mb-2">
                        <span className="text-muted-foreground">–ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ç–∏:</span>
                        <span className="font-bold">~0.5 PAC</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-muted-foreground">–ü–æ–ª—É—á–∏—Ç–µ:</span>
                        <span className="font-bold text-primary">
                          {withdrawAmount ? (Number(withdrawAmount) - 0.5).toFixed(2) : '0'} PAC
                        </span>
                      </div>
                    </div>
                    <Button variant="neon" className="w-full">
                      –í—ã–≤–µ—Å—Ç–∏
                    </Button>
                  </TabsContent>

                  {/* Stake Tab */}
                  <TabsContent value="stake" className="space-y-4">
                    <div className="space-y-2">
                      <label className="text-sm font-medium">–°—É–º–º–∞ PAC</label>
                      <Input
                        type="number"
                        placeholder="–ú–∏–Ω–∏–º—É–º 1000 PAC"
                        value={stakeAmount}
                        onChange={(e) => setStakeAmount(e.target.value)}
                      />
                    </div>
                    <div className="space-y-2">
                      <label className="text-sm font-medium">–ü–µ—Ä–∏–æ–¥ —Å—Ç–µ–π–∫–∏–Ω–≥–∞</label>
                      <div className="grid grid-cols-4 gap-2">
                        {[30, 90, 180, 365].map((days) => (
                          <Button
                            key={days}
                            variant={selectedDuration === days ? 'neon' : 'outline'}
                            size="sm"
                            onClick={() => setSelectedDuration(days)}
                          >
                            {days}–¥
                          </Button>
                        ))}
                      </div>
                    </div>
                    <div className="glass rounded-lg p-4 space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-muted-foreground">APY:</span>
                        <span className="font-bold text-primary">
                          {selectedDuration === 30
                            ? '5%'
                            : selectedDuration === 90
                              ? '8%'
                              : selectedDuration === 180
                                ? '12%'
                                : '15%'}
                        </span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-muted-foreground">–û–∂–∏–¥–∞–µ–º–∞—è –Ω–∞–≥—Ä–∞–¥–∞:</span>
                        <span className="font-bold">
                          {stakeAmount
                            ? (
                                Number(stakeAmount) *
                                (selectedDuration === 30
                                  ? 0.05
                                  : selectedDuration === 90
                                    ? 0.08
                                    : selectedDuration === 180
                                      ? 0.12
                                      : 0.15) *
                                (selectedDuration / 365)
                              ).toFixed(2)
                            : '0'}{' '}
                          PAC
                        </span>
                      </div>
                    </div>
                    <Button variant="neon" className="w-full">
                      –ó–∞—Å—Ç–µ–π–∫–∞—Ç—å
                    </Button>
                  </TabsContent>
                </Tabs>
              </CardContent>
            </Card>

            {/* Transaction History */}
            <Card glow>
              <CardHeader>
                <CardTitle>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</CardTitle>
                <CardDescription>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏</CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {MOCK_TRANSACTIONS.map((tx) => (
                    <div
                      key={tx.id}
                      className="flex items-center justify-between p-4 rounded-lg glass hover-lift"
                    >
                      <div className="flex items-center gap-3">
                        <div className="text-2xl">
                          {TRANSACTION_TYPES[tx.type]?.icon || 'üí∏'}
                        </div>
                        <div>
                          <p className="font-semibold">
                            {TRANSACTION_TYPES[tx.type]?.label || tx.type}
                          </p>
                          <p className="text-xs text-muted-foreground">
                            {new Date(tx.timestamp).toLocaleString('ru-RU', {
                              month: 'short',
                              day: 'numeric',
                              hour: '2-digit',
                              minute: '2-digit',
                            })}
                          </p>
                          {tx.reference && (
                            <p className="text-xs text-muted-foreground">{tx.reference}</p>
                          )}
                        </div>
                      </div>
                      <div className="text-right">
                        <p
                          className={`font-bold ${tx.amount > 0 ? 'text-green-500' : 'text-foreground'}`}
                        >
                          {tx.amount > 0 ? '+' : ''}
                          {tx.amount} {tx.token}
                        </p>
                        <Badge
                          variant={tx.status === 'completed' ? 'success' : 'warning'}
                          className="text-xs mt-1"
                        >
                          {tx.status === 'completed' ? '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' : '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ'}
                        </Badge>
                      </div>
                    </div>
                  ))}
                </div>
                <Button variant="outline" className="w-full mt-4">
                  –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
                </Button>
              </CardContent>
            </Card>
          </div>

          {/* Sidebar */}
          <div className="space-y-6">
            {/* Current Staking */}
            <Card glow>
              <CardHeader>
                <CardTitle>–ê–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–µ–π–∫–∏–Ω–≥</CardTitle>
                <CardDescription>–í–∞—à–∏ –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã</CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="text-center p-4 rounded-lg glass">
                  <p className="text-sm text-muted-foreground mb-1">–ó–∞—Å—Ç–µ–π–∫–∞–Ω–æ</p>
                  <p className="text-3xl font-bold text-neon-purple">
                    {MOCK_WALLET.staked_amount.toLocaleString()}
                  </p>
                  <p className="text-xs text-muted-foreground mt-1">PAC</p>
                </div>

                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">–£—Ä–æ–≤–µ–Ω—å</span>
                    <Badge variant="secondary">Silver</Badge>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">APY</span>
                    <span className="font-bold text-primary">8%</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-muted-foreground">–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞</span>
                    <span className="font-bold">{daysUntilUnlock} –¥–Ω–µ–π</span>
                  </div>
                </div>

                <div className="pt-4 border-t border-border">
                  <p className="text-xs text-muted-foreground mb-2">Progress</p>
                  <div className="h-2 bg-space-border-gray rounded-full overflow-hidden mb-1">
                    <div
                      className="h-full bg-gradient-to-r from-primary to-secondary"
                      style={{ width: '65%' }}
                    />
                  </div>
                  <p className="text-xs text-muted-foreground">65% –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—à–ª–æ</p>
                </div>

                <Button variant="destructive" className="w-full" disabled>
                  –ê–Ω—Å—Ç–µ–π–∫–∞—Ç—å —Ä–∞–Ω–æ
                </Button>
              </CardContent>
            </Card>

            {/* Quick Stats */}
            <Card glow>
              <CardHeader>
                <CardTitle>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex justify-between text-sm">
                  <span className="text-muted-foreground">–í—Å–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π</span>
                  <span className="font-bold">12,450 PAC</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span className="text-muted-foreground">–í—Å–µ–≥–æ –≤—ã–≤–æ–¥–æ–≤</span>
                  <span className="font-bold">3,200 PAC</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span className="text-muted-foreground">–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–≥—Ä–∞–¥</span>
                  <span className="font-bold text-primary">1,850 PAC</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span className="text-muted-foreground">–ü–æ—Ç—Ä–∞—á–µ–Ω–æ –Ω–∞ –∏–≥—Ä—ã</span>
                  <span className="font-bold">2,100 PAC</span>
                </div>
              </CardContent>
            </Card>

            {/* Security */}
            <Card glow>
              <CardHeader>
                <CardTitle>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</CardTitle>
              </CardHeader>
              <CardContent className="space-y-2 text-sm">
                <div className="flex items-center justify-between">
                  <span className="text-muted-foreground">2FA</span>
                  <Badge variant="success">–í–∫–ª—é—á–µ–Ω–æ</Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-muted-foreground">Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</span>
                  <Badge variant="success">–í–∫–ª—é—á–µ–Ω–æ</Badge>
                </div>
                <div className="flex items-center justify-between">
                  <span className="text-muted-foreground">–õ–∏–º–∏—Ç –≤—ã–≤–æ–¥–∞</span>
                  <span className="font-bold">10,000 PAC/–¥–µ–Ω—å</span>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  );
}
